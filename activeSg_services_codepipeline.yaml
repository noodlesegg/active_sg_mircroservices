AWSTemplateFormatVersion: "2010-09-09"
Description: "ActiveSG Micro Services Code Pipeline"

Parameters:
  GitHubUserName:
    Type: String
    Description: "GitHub username for the repository"

  GitHubRepository:
    Type: String
    Description: "GitHub repository"

  GitHubBranch:
    Type: String
    Description: "GitHub Branch"
    Default: master

  GitHubOAuthToken:
    Type: String
    Description: "GitHub Token"
    NoEcho: true

  S3ArtifactStoreBucketName:
    Type: String
    Description: "S3 bucket for the artifact store"

Resources:
  S3ArtifactStoreBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "${S3ArtifactStoreBucketName}-${AWS::Region}"
      AccessControl: "Private"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"

  CodeBuildLambda:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: "Code Build for ActiveSG Micro services"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:2.0"
        EnvironmentVariables:
          - Name: ARTIFACT_BUCKET
            Value: !Ref S3ArtifactStoreBucket

      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE

  WebHook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: "refs/heads/{Branch}"
      Name: "ActiveSGServicesCodePipelineWebHook"
      TargetAction: "GitHub-Source-Action"
      TargetPipeline: !Ref ActiveSGServicesCodePipeline
      TargetPipelineVersion: 1

  ActiveSGServicesCodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties: 
      ArtifactStore: 
        Location: !Ref S3ArtifactStoreBucket
        Type: "S3"
      Name: "ActiveSG"
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages: 
        - Name: "GitHub-Source"
          Actions:
            - Name: "GitHub-Source-Action"
              ActionTypeId:
                Category: "Source"
                Owner: "ThirdParty"
                Version: 1
                Provider: "GitHub"
              OutputArtifacts:
                - Name: "SourceCode"
              Configuration:
                Owner: !Ref GitHubUserName
                Repo: !Ref GitHubRepository
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
                # PollForSourceChanges: false
        - Name: "Build"
          Actions:
            - Name: "Build-Action"
              ActionTypeId:
                Category: "Build"
                Owner: "AWS"
                Version: 1
                Provider: "CodeBuild"
              InputArtifacts:
                - Name: "SourceCode"
              OutputArtifacts:
                - Name: "Template"
              Configuration:
                ProjectName: !Ref CodeBuildLambda
        - Name: "Deploy"
          Actions:
            - Name: "Deploy-Action"
              InputArtifacts:
                - Name: "Template"
              ActionTypeId:
                Category: "Deploy"
                Owner: "AWS"
                Version: 1
                Provider: "CloudFormation"
              Configuration:
                StackName: !Sub "active-sg-micro-services-deployment-${AWS::Region}"
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
                TemplatePath: "Template::activeSg_sam_output.yaml"

  CodeBuildServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "codebuild.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "cloudwatch"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: 
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
        - PolicyName: "s3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource: "*"

  CloudFormationServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "cloudformation.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "iam"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: 
                  - "iam:PassRole"
                  - "iam:GetRole"
                  - "iam:AttachRolePolicy"
                  - "iam:CreateRole"
                  - "iam:PutRolePolicy"
                Resource: "*"

  CodePipelineServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: codepipeline.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "codeBuild"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "codebuild:*"
                Resource: "*"
        - PolicyName: "code-deploy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "codedeploy:*"
                Resource: "*"
        - PolicyName: "s3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource: "*"
        - PolicyName: "cfn"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource: "*"
